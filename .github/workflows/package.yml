name: Package

on:
  push:
    branches: [ master, merge_os ]
  pull_request:
    branches: [ master, merge_os ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Extract current maven version
      run: echo "::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)"
      id: version
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: target/radiorecorder-${{ steps.version.outputs.version }}-app
  jpackage:
    needs: build
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            container: debian:10
            jpkg_type: deb
            style: debian
            extra_args: >
              --license-file ${APPDIR}/LICENSE
              --linux-deb-maintainer s@sfuhrm.de
          - os: ubuntu-latest
            container: debian:10
            jpkg_type: app-image
            style: debian
            extra_args: ""
          - os: ubuntu-latest
            container: centos:8
            jpkg_type: rpm
            style: redhat
            extra_args: >
              --license-file ${APPDIR}/LICENSE
              --linux-deb-maintainer s@sfuhrm.de
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    env:
      JDK_URL: https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.1%2B12/OpenJDK17U-jdk_x64_linux_hotspot_17.0.1_12.tar.gz
      JAVA_HOME: /usr/lib/jdk
      PACKAGE_VERSION: ${{ needs.build.outputs.version }}
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Setup Debian container
        run: |
          echo "List of current dir:"
          ls -alR
          echo "Debian version:"
          cat /etc/debian_version
          apt-get update
          apt-get install -y --no-install-recommends curl openssh-client git fakeroot curl binutils
        if: matrix.style == 'debian'
      - name: Setup CentOS container
        run: |
          echo "List of current dir:"
          ls -alR
          yum install --assumeyes rpm-build git openssh-clients
        if: matrix.style == 'redhat'
      - name: Setup JDK
        run: |
          mkdir ${{ env.JAVA_HOME }}
          curl --insecure --location ${{ env.JDK_URL }} --output - | \
          tar -xzf- --strip-components 1 --directory ${{ env.JAVA_HOME }}
      - name: Build package
        run: |
          APPDIR=$(pwd)/radiorecorder-${{ needs.build.outputs.version }}
          ${{ env.JAVA_HOME }}/bin/jpackage \
            --name radiorecorder \
            --type ${{ matrix.jpkg_type }} \
            --app-version ${{ needs.build.outputs.version }} \
            --copyright "Stephan Fuhrmann" \
            --vendor "Stephan Fuhrmann" \
            --description "Records and plays internet radio streams" \
            --main-jar lib/radiorecorder-${{ needs.build.outputs.version }}.jar \
            --main-class de.sfuhrm.radiorecorder.Main \
            --input ${APPDIR} \
            --linux-app-category sound \
            --dest jpackage-app \
            --verbose \
            ${{ matrix.extra_args }}
      - uses: actions/upload-artifact@v2
        with:
          name: package
          path: jpackage-app/*
